{"version":3,"sources":["images/logo.png","components/NavigationBar/styles.js","components/NavigationBar/components/Logo/styles.js","components/NavigationBar/components/Logo/index.js","components/NavigationBar/components/MenuItem/styles.js","components/NavigationBar/components/MenuItem/index.js","components/NavigationBar/index.js","screens/HomePage/index.js","screens/ProjectsPage/index.js","screens/ContactPage/index.js","screens/ResumePage/index.js","screens/AboutPage/index.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","styled","nav","_templateObject","themeGet","Menu","ul","_templateObject2","StyledLink","Link","_templateObject3","Toggle","input","_templateObject4","Label","label","_templateObject5","Icon","img","styles_templateObject","Logo","react_default","a","createElement","to","src","logoImg","alt","Component","Item","li","MenuItem_styles_templateObject","props","selected","MenuItem","this","children","NavigationBar","components_Logo","id","type","htmlFor","components_MenuItem","page","HomePage","components_NavigationBar","ProjectsPage","ContactPage","ResumePage","AboutPage","theme","colors","navigation","background","text","text-highlighted","border","menu","fonts","primary","App","styled_components_browser_esm","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0628f487.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f2fad24f.png\";","import styled from \"styled-components\";\nimport { themeGet } from \"styled-system\";\nimport { Link } from \"react-router-dom\";\n\nexport const Container = styled.nav`\n  display: flex;\n  width: 100%;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n  background-color: ${themeGet(\"colors.navigation.background\", \"black\")};\n\n  @media all and (max-width: 800px) {\n    justify-content: space-between;\n  }\n\n  @media all and (max-width: 500px) {\n    display: block;\n    justify-content: column;\n  }\n`;\n\nexport const Menu = styled.ul`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 0px;\n  margin: 0px;\n  list-style-type: none;\n  background-color: ${themeGet(\"colors.navigation.background\", \"black\")};\n\n  @media all and (max-width: 800px) {\n    justify-content: space-around;\n  }\n\n  @media all and (max-width: 500px) {\n    display: block;\n    list-style-type: none;\n    flex-direction: column;\n    align-items: center;\n    height: 0;\n    opacity: 0;\n    text-align: center;\n    width: 100%;\n    visibility: hidden;\n    transition: all 1s ease;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n`;\n\nexport const Toggle = styled.input`\n  :checked ~ ul {\n    opacity: 1;\n    height: 50vh;\n    visibility: visible;\n    transition: all 1s ease;\n  }\n  display: none;\n`;\n\nexport const Label = styled.label`\n  display: none;\n\n  background: linear-gradient(\n    to bottom,\n    ${themeGet(\"colors.navigation.menu\", \"gray\")} 0%,\n    ${themeGet(\"colors.navigation.menu\", \"gray\")} 20%,\n    transparent 20%,\n    transparent 40%,\n    ${themeGet(\"colors.navigation.menu\", \"gray\")} 40%,\n    ${themeGet(\"colors.navigation.menu\", \"gray\")} 60%,\n    transparent 60%,\n    transparent 80%,\n    ${themeGet(\"colors.navigation.menu\", \"gray\")} 80%,\n    ${themeGet(\"colors.navigation.menu\", \"gray\")} 100%\n  );\n  cursor: pointer;\n  float: right;\n  height: 35px;\n  margin-top: 1em;\n  margin-right: 1em;\n  width: 35px;\n\n  @media all and (max-width: 500px) {\n    display: block;\n  }\n`;\n","import styled from 'styled-components'\nimport { themeGet } from 'styled-system'\n\nexport const Icon = styled.img`\n    width: 70px;\n    margin-left: 12px;\n    background-color: ${themeGet('colors.navigation.background', 'black')}\n`;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Icon } from \"./styles\";\nimport logoImg from \"./../../../../images/logo.png\";\n\nclass Logo extends Component {\n  render() {\n    return (\n      <Link to=\"/\">\n        <Icon src={logoImg} alt=\"Icon\" />\n      </Link>\n    );\n  }\n}\n\nexport default Logo","import styled from \"styled-components\";\nimport { themeGet } from \"styled-system\";\n\nexport const Item = styled.li`\n  flex: 1;\n  padding-right: 10px;\n  padding-left: 10px;\n  margin-left: 10px;\n  margin-right: 10px;\n  font-family: ${themeGet(\"fonts.primary\", \"Arial\")};\n  font-size: 18px;\n  font-weight: bold;\n  background-color: ${themeGet(\"colors.navigation.background\", \"black\")};\n  color: ${props =>\n    props.selected\n      ? themeGet(\"colors.navigation.text-highlighted\", \"white\")\n      : themeGet(\"colors.navigation.text\", \"gray\")};\n  -webkit-transition-duration: 0.2s;\n  transition-duration: 0.2s;\n\n  :hover {\n    color: ${themeGet(\"colors.navigation.text-highlighted\", \"white\")};\n  }\n\n  @media all and (max-width: 500px) {\n    display: block;\n    text-align: center;\n    padding: 0px 10px 10px 10px;\n    border-top: 1px solid ${themeGet(\"colors.navigation.border\", \"gray\")};\n  }\n`;\n","import React, { Component } from \"react\";\nimport {Item} from \"./styles\"\n\nclass MenuItem extends Component {\n    render () {\n        return <Item selected={this.props.selected}>{this.props.children}</Item>\n    }\n}\n\nexport default MenuItem","import React, { Component } from \"react\";\nimport {\n  Container,\n  Menu,\n  StyledLink,\n  Toggle,\n  Label,\n} from \"./styles\";\nimport Logo from \"./components/Logo\";\nimport MenuItem from \"./components/MenuItem\";\n\nclass NavigationBar extends Component {\n  render() {\n    return (\n      <Container>\n        <Logo />\n        <Toggle id=\"menuToggle\" type=\"checkbox\" />\n        <Label htmlFor=\"menuToggle\" />\n        <Menu>\n          <StyledLink to=\"/\">\n            <MenuItem selected={this.props.page === \"Home\"}>Home</MenuItem>\n          </StyledLink>\n          <StyledLink to=\"/about\">\n            <MenuItem selected={this.props.page === \"About\"}>About</MenuItem>\n          </StyledLink>\n          <StyledLink to=\"/projects\">\n            <MenuItem selected={this.props.page === \"Projects\"}>\n              Projects\n            </MenuItem>\n          </StyledLink>\n          <StyledLink to=\"/resume\">\n            <MenuItem selected={this.props.page === \"Resume\"}>Resume</MenuItem>\n          </StyledLink>\n          <StyledLink to=\"/contact\">\n            <MenuItem selected={this.props.page === \"Contact\"}>\n              Contact\n            </MenuItem>\n          </StyledLink>\n        </Menu>\n      </Container>\n    );\n  }\n}\n\nexport default NavigationBar;\n","import React, { Component } from \"react\";\nimport NavigationBar from \"./../../components/NavigationBar\"\n\nclass HomePage extends Component {\n    render() {\n        return (\n            <NavigationBar page=\"Home\"/>\n        )\n    }\n}\n\nexport default HomePage","import React, { Component } from \"react\";\nimport NavigationBar from \"./../../components/NavigationBar\"\n\nclass ProjectsPage extends Component {\n    render() {\n        return (\n            <div>\n                <NavigationBar page=\"Projects\"/>\n                <h1>this is the Projects Page!</h1>\n            </div>\n        )\n    }\n}\n\nexport default ProjectsPage","import React, { Component } from \"react\";\nimport NavigationBar from \"./../../components/NavigationBar\"\n\nclass ContactPage extends Component {\n    render() {\n        return (\n            <div>\n                <NavigationBar page=\"Contact\"/>\n                <h1>this is the Contact Page!</h1>\n            </div>\n        )\n    }\n}\n\nexport default ContactPage","import React, { Component } from \"react\";\nimport NavigationBar from \"./../../components/NavigationBar\"\n\nclass ResumePage extends Component {\n    render() {\n        return (\n            <div>\n                <NavigationBar page=\"Resume\"/>\n                <h1>this is the Resume Page!</h1>\n            </div>\n        )\n    }\n}\n\nexport default ResumePage","import React, { Component } from \"react\";\nimport NavigationBar from \"./../../components/NavigationBar\"\n\nclass AboutPage extends Component {\n    render() {\n        return (\n            <div>\n                <NavigationBar page=\"About\"/>\n                <h1>this is the About Page!</h1>\n            </div>\n        )\n    }\n}\n\nexport default AboutPage","const theme = {\n    colors: {\n        navigation: {\n            background: 'black',\n            text: 'gray',\n            'text-highlighted': 'white',\n            border: 'gray',\n            menu: '#DDDDDD',\n        }\n    },\n    fonts: {\n        primary: 'Arial'\n    }\n}\n\nexport default theme","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport HomePage from \"./screens/HomePage\";\nimport ProjectsPage from \"./screens/ProjectsPage\";\nimport ContactPage from \"./screens/ContactPage\";\nimport ResumePage from \"./screens/ResumePage\";\nimport AboutPage from \"./screens/AboutPage\";\nimport theme from \"./theme.js\";\n\nclass App extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/projects\" component={ProjectsPage} />\n            <Route exact path=\"/contact\" component={ContactPage} />\n            <Route exact path=\"/resume\" component={ResumePage} />\n            <Route exact path=\"/about\" component={AboutPage} />\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}